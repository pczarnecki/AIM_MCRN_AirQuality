#Push temperature&humidity data back climate_lag days by adding empty data in front
#rep(NA, n) creates a vector of length n filled with NA
parma$Temperature.1 <- c(rep(NA, climate_lag),  parma$Temperature[(1):(nrow(parma)-climate_lag)])
parma$Humidity.1 <- c(rep(NA, climate_lag), parma$Humidity[(1):(nrow(parma)-climate_lag)])
parma$pm25.1 <- c(rep(NA, climate_lag), parma$pm25[(1):(nrow(parma)-climate_lag)])
#push npi back num_lag days
parma$npi.1 <- c(rep(NA, num_lag), parma$npi[(1):(nrow(parma)-num_lag)])
#Omit the new NAs
parma <- na.omit(parma)
infections.gam <- gam(Daily ~ s(Temperature.1) + s(Humidity.1) +s(npi.1, k=4) + s(pm25.1), family=poisson(link="log"), data=parma)
plot(infections.gam,scale=0,se=2, shade=TRUE,pages=1)
require(mgcv)
bologna <- read.csv("bologna_full.csv")
bologna <- na.omit(bologna)
modena <- read.csv("modena_full.csv")
modena <- na.omit(modena)
florence <- read.csv("florence_full.csv")
florence <- na.omit(florence)
rome <- read.csv("rome_full.csv")
rome <- na.omit(rome)
num_lag <- 21
climate_lag <- 6
for(i in num_lag:num_lag) {
num_lag <- i
bologna <- read.csv("bologna_full.csv") #Read in file
#Push temperature&humidity data back climate_lag days by adding empty data in front
#rep(NA, n) creates a vector of length n filled with NA
bologna$Temperature.1 <- c(rep(NA, climate_lag),  bologna$Temperature[(1):(nrow(bologna)-climate_lag)])
bologna$Humidity.1 <- c(rep(NA, climate_lag), bologna$Humidity[(1):(nrow(bologna)-climate_lag)])
bologna$pm25.1 <- c(rep(NA, climate_lag), bologna$pm25[(1):(nrow(bologna)-climate_lag)])
#push npi back num_lag days
bologna$npi.1 <- c(rep(NA, num_lag), bologna$npi[(1):(nrow(bologna)-num_lag)])
#Omit the new NAs
bologna <- na.omit(bologna)
infections.gam <- gam(Daily ~ s(Temperature.1) + s(Humidity.1) + s(pm25.1) + s(npi.1, k=4), family=poisson(link="log"), data=bologna)
plot(infections.gam,scale=0,se=2, shade=TRUE,pages=1)
title(main = i)
}
for(i in num_lag:num_lag) {
num_lag <- i
modena <- read.csv("modena_full.csv") #Read in file
#Push temperature&humidity data back climate_lag days by adding empty data in front
#rep(NA, n) creates a vector of length n filled with NA
modena$Temperature.1 <- c(rep(NA, climate_lag),  modena$Temperature[(1):(nrow(modena)-climate_lag)])
modena$Humidity.1 <- c(rep(NA, climate_lag), modena$Humidity[(1):(nrow(modena)-climate_lag)])
modena$pm25.1 <- c(rep(NA, climate_lag), modena$pm25[(1):(nrow(modena)-climate_lag)])
#push npi back num_lag days
modena$npi.1 <- c(rep(NA, num_lag), modena$npi[(1):(nrow(modena)-num_lag)])
#Omit the new NAs
modena <- na.omit(modena)
infections.gam <- gam(Daily ~ s(Temperature.1) + s(Humidity.1) + s(pm25.1) + s(npi.1, k=4), family=poisson(link="log"), data=modena)
plot(infections.gam,scale=0,se=2, shade=TRUE,pages=1)
title(main = i)
}
for(i in num_lag:num_lag) {
num_lag <- i
florence <- read.csv("florence_full.csv") #Read in file
#Push temperature&humidity data back climate_lag days by adding empty data in front
#rep(NA, n) creates a vector of length n filled with NA
florence$Temperature.1 <- c(rep(NA, climate_lag),  florence$Temperature[(1):(nrow(florence)-climate_lag)])
florence$Humidity.1 <- c(rep(NA, climate_lag), florence$Humidity[(1):(nrow(florence)-climate_lag)])
florence$pm25.1 <- c(rep(NA, climate_lag), florence$pm25[(1):(nrow(florence)-climate_lag)])
#push npi back num_lag days
florence$npi.1 <- c(rep(NA, num_lag), florence$npi[(1):(nrow(florence)-num_lag)])
#Omit the new NAs
florence <- na.omit(florence)
infections.gam <- gam(Daily ~ s(Temperature.1) + s(Humidity.1) + s(pm25.1) + s(npi.1, k=4), family=poisson(link="log"), data=florence)
plot(infections.gam,scale=0,se=2, shade=TRUE,pages=1)
title(main = i)
}
for(i in num_lag:num_lag) {
num_lag <- i
rome <- read.csv("rome_full.csv") #Read in file
#Push temperature&humidity data back climate_lag days by adding empty data in front
#rep(NA, n) creates a vector of length n filled with NA
rome$Temperature.1 <- c(rep(NA, climate_lag),  rome$Temperature[(1):(nrow(rome)-climate_lag)])
rome$Humidity.1 <- c(rep(NA, climate_lag), rome$Humidity[(1):(nrow(rome)-climate_lag)])
rome$pm25.1 <- c(rep(NA, climate_lag), rome$pm25[(1):(nrow(rome)-climate_lag)])
#push npi back num_lag days
rome$npi.1 <- c(rep(NA, num_lag), rome$npi[(1):(nrow(rome)-num_lag)])
#Omit the new NAs
rome <- na.omit(rome)
infections.gam <- gam(Daily ~ s(Temperature.1) + s(Humidity.1) + s(pm25.1)+s(npi.1, k=4), family=poisson(link="log"), data=rome)
plot(infections.gam,scale=0,se=2, shade=TRUE,pages=1)
title(main = i)
}
milan <- read.csv("milan_full.csv") #Read in file
#Push temperature&humidity data back climate_lag days by adding empty data in front
#rep(NA, n) creates a vector of length n filled with NA
milan$Temperature.1 <- c(rep(NA, climate_lag),  milan$Temperature[(1):(nrow(milan)-climate_lag)])
milan$Humidity.1 <- c(rep(NA, climate_lag), milan$Humidity[(1):(nrow(milan)-climate_lag)])
milan$pm25.1 <- c(rep(NA, climate_lag), milan$pm25[(1):(nrow(milan)-climate_lag)])
milan$no2.1 <- c(rep(NA, climate_lag), milan$no2[(1):(nrow(milan)-climate_lag)])
#push npi back num_lag days
milan$npi.1 <- c(rep(NA, num_lag), milan$npi[(1):(nrow(milan)-num_lag)])
#Omit the new NAs
milan <- na.omit(milan)
infections.gam <- gam(Daily ~ s(Temperature.1) + s(Humidity.1) +s(npi.1, k=4) + s(pm25.1) + s(no2.1), family=poisson(link="log"), data=milan)
plot(infections.gam,scale=0,se=2, shade=TRUE,pages=1)
brescia <- read.csv("brescia_full.csv") #Read in file
#Push temperature&humidity data back climate_lag days by adding empty data in front
#rep(NA, n) creates a vector of length n filled with NA
brescia$Temperature.1 <- c(rep(NA, climate_lag),  brescia$Temperature[(1):(nrow(brescia)-climate_lag)])
brescia$Humidity.1 <- c(rep(NA, climate_lag), brescia$Humidity[(1):(nrow(brescia)-climate_lag)])
brescia$pm25.1 <- c(rep(NA, climate_lag), brescia$pm25[(1):(nrow(brescia)-climate_lag)])
brescia$no2.1 <- c(rep(NA, climate_lag), brescia$no2[(1):(nrow(brescia)-climate_lag)])
#push npi back num_lag days
brescia$npi.1 <- c(rep(NA, num_lag), brescia$npi[(1):(nrow(brescia)-num_lag)])
#Omit the new NAs
brescia <- na.omit(brescia)
infections.gam <- gam(Daily ~ s(Temperature.1) + s(Humidity.1) +s(npi.1, k=4) + s(pm25.1) + s(no2.1), family=poisson(link="log"), data=brescia)
plot(infections.gam,scale=0,se=2, shade=TRUE,pages=1)
parma <- read.csv("parma_full.csv") #Read in file
#Push temperature&humidity data back climate_lag days by adding empty data in front
#rep(NA, n) creates a vector of length n filled with NA
parma$Temperature.1 <- c(rep(NA, climate_lag),  parma$Temperature[(1):(nrow(parma)-climate_lag)])
parma$Humidity.1 <- c(rep(NA, climate_lag), parma$Humidity[(1):(nrow(parma)-climate_lag)])
parma$pm25.1 <- c(rep(NA, climate_lag), parma$pm25[(1):(nrow(parma)-climate_lag)])
parma$no2.1 <- c(rep(NA, climate_lag), parma$no2[(1):(nrow(parma)-climate_lag)])
#push npi back num_lag days
parma$npi.1 <- c(rep(NA, num_lag), parma$npi[(1):(nrow(parma)-num_lag)])
#Omit the new NAs
parma <- na.omit(parma)
infections.gam <- gam(Daily ~ s(Temperature.1) + s(Humidity.1) +s(npi.1, k=4) + s(pm25.1) + s(no2.1), family=poisson(link="log"), data=parma)
plot(infections.gam,scale=0,se=2, shade=TRUE,pages=1)
source("ReadAllData1.R")
source("ReadAllData1.R")
## read in all combined data at once
library(dplyr)
## read in all combined data at once
library(dplyr)
library(readr)
library(tidyverse)
path <- "/Users/Laura/Documents/ResearchCode/Air Quality COVID/25cities/combined/"
files <- list.files(path=path, pattern="*.csv")
for(file in files){
perpos <- which(strsplit(file, "")[[1]]==".")
assign(
gsub(" ","",substr(file, 1, perpos-1)),
read.csv(paste(path,file,sep="")))
}
Italy_Cities <- c()
for(i in 1:length(files)){
perpos <- which(strsplit(files[i], "")[[1]]==".")
Italy_Cities[i] <- gsub(" ","",substr(files[i], 1, perpos-1))
}
for(city in Italy_Cities){
city_get <- get(city)
city_name <- strsplit(city, "_")[[1]][1]
city_name <- rep(city_name, length(city_get[,1]))
assign(paste(city,"_all", sep = ""), cbind(city_get, city_name))
}
#Lodi and Parma have date in different format, change to same format as other dataframes
Lodi_total_all$date <- as.Date(Lodi_total_all$date, format = "%m/%d/%y")
Parma_total_all$date <- as.Date(Parma_total_all$date, format = "%m/%d/%y")
Lodi_total_all$date <- as.character(Lodi_total_all$date)
Parma_total_all$date <- as.character(Parma_total_all$date)
italy_25 <- bind_rows(Alessandria_total_all, Bergamo_total_all,     Bologna_total_all,
Bolzano_total_all,     Brescia_total_all,     Como_total_all,
Cremona_total_all,     Cuneo_total_all,       Firenze_total_all,
Lecco_total_all,       Lodi_total_all,        Mantova_total_all,
Milano_total_all,      Modena_total_all,      Monza_total_all,
Napoli_total_all,      Parma_total_all,       Pavia_total_all,
Piacenza_total_all,    Reggio_total_all,      Rimini_total_all,
Roma_total_all,        Torino_total_all,      Varese_total_all,
Verona_total_all  )
#format date as date
italy_25$date <- as.Date(italy_25$date, format = "%Y-%m-%d")
#add number of day
italy_25$day_num = as.numeric(strftime(italy_25$date, format = "%j"))
#add week number
italy_25$week_num <- as.numeric(strftime(italy_25$date, format = "%V"))
#add month number
italy_25$month_num <- as.numeric(strftime(italy_25$date, format = "%m"))
#add weekday
italy_25$weekday <- weekdays(italy_25$date)
italy_25$weekday <- as.numeric(factor(italy_25$weekday, levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday", "Sunday"),
ordered = TRUE))
#Create list of city names to loop through for GAM
city_names <- rep(NA, length(Italy_Cities))
for(i in 1:length(Italy_Cities)){
city_names[i] <- strsplit(Italy_Cities[i], "_")[[1]][1]
}
city_names
#Combine with rt2
Rt2 <- read_csv("~/Documents/ResearchCode/Air Quality COVID/Data/Rt2/Data/Rt2.csv")
#Change Reggio_Emilia to Reggio
colnames(Rt2)[7] <- "Reggio"
#Make the Rt2 data into long format
Rt2_long <- pivot_longer(Rt2, 4:28, names_to = "city_name", values_to = "rt")
#Combine italy_25 and Rt2 by date and city
italy_Rt2 <- left_join(italy_25, Rt2_long, by = c("date", "city_name"))
#plot rt2 for each city
ggplot(italy_Rt2, aes(x = date, y = rt, color = city_name))+geom_line()+labs(y = "Rt2")
#plot rt live for each city
ggplot(italy_Rt2, aes(x = date, y = mean, color = city_name))+geom_line()+labs(y = "Rt")
source("ReadAllData1.R")
## read in all combined data at once
library(dplyr)
library(readr)
library(tidyverse)
path <- "/Users/pczar/Desktop/AIM Workshop/AIM_MCRN_AirQuality"
files <- list.files(path=path, pattern="*.csv")
for(file in files){
perpos <- which(strsplit(file, "")[[1]]==".")
assign(
gsub(" ","",substr(file, 1, perpos-1)),
read.csv(paste(path,file,sep="")))
}
source("ReadAllData1.R")
## read in all combined data at once
library(dplyr)
library(readr)
library(tidyverse)
path <- "/Users/pczar/Desktop/AIM Workshop/AIM_MCRN_AirQuality/"
files <- list.files(path=path, pattern="*.csv")
for(file in files){
perpos <- which(strsplit(file, "")[[1]]==".")
assign(
gsub(" ","",substr(file, 1, perpos-1)),
read.csv(paste(path,file,sep="")))
}
source("ReadAllData1.R")
source("ReadAllData1.R")
source("ReadAllData1.R")
source("ReadAllData1.R")
source("ReadAllData1.R")
library(mgcv)
#all of italy
italy_25gam <- gam(log(mean)~
s(home, k = 5)+s(pm25, k = 5)+s(med_temp, k = 5)+s(med_hum, k = 5), data = italy_25, family = gaussian)
plot(italy_25gam,scale=0,se=2, shade=TRUE,pages=1, scheme = 2,main = "25 Cities in Italy")
summary(italy_25gam)
gam.check(italy_25gam)
#all of italy including city
#italy_25f <- italy_25
#italy_25f$city_name <- as.factor(italy_25$city_name)
#italy_25gam <- gam(log(mean)~
#                    s(home, k = 5)+s(pm25, k = 5)+s(med_temp, k = 5)+s(med_hum, k = 5)+city_name, data = italy_25f, family = gaussian)
#plot(italy_25gam,scale=0,se=2, shade=TRUE,pages=1, scheme = 2,main = "25 Cities in Italy")
#summary(italy_25gam)
source("ReadAllData1.R")
library(mgcv)
new_data = italy_25
for (ciy in city_names) {
italy_25gam <- gam(log(mean)~
s(home, k = 5)+s(pm25, k = 5)+s(med_temp, k = 5)+s(med_hum, k = 5), data = new_data, family = gaussian)
}
View(italy_25)
View(italy_25)
source("ReadAllData1.R")
library(mgcv)
for (city in city_names) {
new_data = subset(italy_25, city_name!=city)
italy_25gam <- gam(log(mean)~
s(home, k = 5)+s(pm25, k = 5)+s(med_temp, k = 5)+s(med_hum, k = 5), data = new_data, family = gaussian)
}
source("ReadAllData1.R")
library(mgcv)
for (city in city_names) {
new_data = subset(italy_25, city_name!=city)
assign( paste(city,"_exclude_gam", sep = ""), gam(log(mean)~
s(home)+s(pm25, k = 5)+s(med_temp, k = 6)+s(med_hum, k = 6), data = new_data, family = gaussian))
plot(get(paste(city, "_exclude_gam", sep = "")),scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
points(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city, add=TRUE)
}
source("ReadAllData1.R")
library(mgcv)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
par(new = TRUE)
plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
ggplot(city_data, aes(date, mean))+geom_line()
plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
ggplot(city_data, aes(date, mean))+geom_line()
#plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
ggplot(city_data, aes(date, mean))+geom_line()
#plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
View(city_data)
View(city_data)
#plot all R(t) curves
library(ggplot2)
ggplot(italy_25, aes(date, mean, color = city_name))+geom_line()
#plot infections curve
ggplot(italy_25, aes(date, infections, color = city_name))+geom_line()
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
ggplot(city_data, aes(date, mean, color = black))+geom_line()
#plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
ggplot(city_data, aes(date, mean, color = black))+geom_line()
#plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
plot(date, mean)
#plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
plot(date,mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
date
city_data.date
mean
city_data.mean
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
qplot(date, mean, data=city_data)
#ggplot(city_data, aes(date, mean, color = city_name))+geom_line()
#plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
qplot(date, mean, data=city_data)
#ggplot(city_data, aes(date, mean, color = city_name))+geom_line()
#plot(mean,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
ggplot(city_data, aes(date, mean, color = city_name))+geom_line()
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
ggplot(city_data, date, mean)+geom_line()
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
ggplot(city_data, aes(date, mean, color = city_name))+geom_line()
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
ggplot(italy_25, aes(date, mean, color = city_name))+geom_line()
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
ggplot(italy_25, aes(date, mean, color = city_name))+geom_line()
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
#plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
#par(new = TRUE)
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
plot(pred_cases,scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
source("ReadAllData1.R")
library(mgcv)
library(ggplot2)
for (city in city_names) {
city_data = subset(italy_25, city_name==city)
city_gam <- get(paste(city, "_exclude_gam", sep = ""))
pred_cases <- predict(city_gam,city_data)
plot(exp(pred_cases),scale=0,se=2, shade=TRUE,pages=1, scheme = 2, main = city)
}
